{% set name = "oauthenticator" %}
{% set version = "17.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: e5d90cb2411fff3dc6fcc1633468233c0e0e0239422c087c7734d1685055b8f3

build:
  number: 0
  skip: true  # [py<38]
  script: {{ PYTHON }} -m pip install --no-deps --no-build-isolation . -vv

requirements:
  host:
    - python
    - pip
    - setuptools
    - wheel
  run:
    - python
    - jsonschema
    - jupyterhub >=2.2
    - requests
    - ruamel.yaml
    - tornado
    - pyjwt >=2
    - traitlets
  run_constrained:
    - mwoauth >=0.3.8

# ModuleNotFoundError: No module named 'mwoauth'
{% set ignore_tests = " --ignore=oauthenticator/tests/test_mediawiki.py" %}

test:
  source_files:
    - oauthenticator
  imports:
    - oauthenticator
    - oauthenticator.azuread
    - oauthenticator.github
    - oauthenticator.oauth2
  requires:
    - pip
    - pytest
    - pytest-tornasync
    - pytest-cov
    - requests-mock
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - pytest -v {{ ignore_tests }} oauthenticator
about:
  home: https://github.com/jupyterhub/oauthenticator
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: OAuth + JupyterHub Authenticator = OAuthenticator
  description: |
    OAuthenticator provides plugins for JupyterHub to use common OAuth providers,
    as well as base classes for writing your own Authenticators with any OAuth 2.0 provider.
  doc_url: https://oauthenticator.readthedocs.io
  dev_url: https://github.com/jupyterhub/oauthenticator

extra:
  recipe-maintainers:
    - ericcina
    - sodre
    - consideRatio