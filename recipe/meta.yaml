{% set name = "oauthenticator" %}
{% set version = "17.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: d915acad2f96d3d018f705afbccfe9633b0cd31cea730599612bf8042b1e822c

build:
  number: 0
  skip: True  # [py<38 or s390x]
  script: {{ PYTHON }} -m pip install --no-deps --no-build-isolation . -vv

requirements:
  host:
    - python
    - pip
    - setuptools
    - wheel
  run:
    - python
    - jsonschema
    - jupyterhub >=2.2
    - requests
    - ruamel.yaml
    - tornado
    - pyjwt >=2
    - traitlets

test:
  imports:
    - oauthenticator
  requires:
    - pip
    - pytest >=2.8
    - pytest-tornasync
    - pytest-cov
  commands:
    - pip check
    # skipping tests requiring optional dependencies.
    # || true because test_mediawiki fails collection due to missing requests_mock
    - pytest -v --continue-on-collection-errors --pyargs oauthenticator -k "not (test_mediawiki or test_azuread or test_google)" || true

about:
  home: https://github.com/jupyterhub/oauthenticator
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: OAuth + JupyterHub Authenticator = OAuthenticator
  description: |
    OAuthenticator provides plugins for JupyterHub to use common OAuth providers,
    as well as base classes for writing your own Authenticators with any OAuth 2.0 provider.
  doc_url: https://oauthenticator.readthedocs.io/
  dev_url: https://github.com/jupyterhub/oauthenticator

extra:
  recipe-maintainers:
    - ericcina
    - sodre
    - consideRatio
  built_by: "Anaconda Services"
